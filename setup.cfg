[mypy-bottle,diffimg,fuse,psutil,boto3,retry]
ignore_missing_imports = True

[mypy-argcomplete,argcomplete.completers]
ignore_missing_imports = True

[mypy-docker,docker.errors]
ignore_missing_imports = True

[mypy-marshmallow,marshmallow_jsonapi,marshmallow.fields]
ignore_missing_imports = True

[mypy-oauthlib,oauthlib.common,oauthlib.oauth2]
ignore_missing_imports = True

[mypy-selenium,selenium.webdriver,selenium.webdriver.common.by,selenium.webdriver.common.keys,selenium.webdriver.support,selenium.webdriver.support.wait]
ignore_missing_imports = True

[mypy-setuptools,setuptools.command.install]
ignore_missing_imports = True

[mypy-sqlalchemy,sqlalchemy.types,sqlalchemy.sql.schema,sqlalchemy.sql.expression,sqlalchemy.pool,sqlalchemy.engine.reflection]
ignore_missing_imports = True

[mypy-watchdog.observers,watchdog.events]
ignore_missing_imports = True

[mypy-webtest,webtest]
ignore_missing_imports = True

[mypy-freezegun,freezegun]
ignore_missing_imports = True

[flake8]
max-line-length = 200
exclude = venv/*,var/*,codalab/lib/beam/*

# Ignore completely:
# E203 - White space before ':', (conflicts with black)
# E731 - do not assign a lambda expression, use a def
#
# W503 - line break before binary operator, (conflicts with black)
# W605 - invalid escape sequence '\', (causes failures)

# Ignore on a per file basis:
# F401 - module imported but not used
# E501 - line too long, exceeds max-line-length

ignore = E203,E731,W503,W605
per-file-ignores =
  #  Keep the unused imports as they are used to route the rest service
  codalab/server/rest_server.py: F401
  #  Modifying those texts in accordance with flake8 will change how the generated markdown look like
  ./scripts/gen-rest-docs.py: E501

[mypy-apache_beam,apache_beam.io.filesystem,apache_beam.io.filesystems]
ignore_missing_imports = True

[mypy-azure.storage.blob]
ignore_missing_imports = True

[mypy-markdown2]
ignore_missing_imports = True

[mypy-urllib3.util.retry]
ignore_missing_imports = True
