# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: check_backend
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      addToPath: true
      architecture: 'x64'
  - script: |
      pip install --upgrade black==18.9b0
      black . --check --diff
    displayName: 'check backend'
- job: check_frontend
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: 13.x
    displayName: 'Install Node.js'
  - script: |
      cd frontend
      npm install
      npm run check-ci
    displayName: 'check frontend'
- job: build_docker
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      addToPath: true
      architecture: 'x64'
  - script: |
      python codalab_service.py build services --version ${TRAVIS_BRANCH} --pull $([ -z "${CODALAB_DOCKER_USERNAME}" ] || [ "$TRAVIS_PULL_REQUEST_BRANCH" != "" ] || echo "--push")
      python codalab_service.py start --services default monitor --version ${TRAVIS_BRANCH}
      python codalab_service.py test --version ${TRAVIS_BRANCH} default
      docker restart codalab_worker_1 && python3 codalab_service.py test run --version ${TRAVIS_BRANCH}
      docker stop codalab_worker_1
      python codalab_service.py start --services worker --version ${TRAVIS_BRANCH} --shared-file-system
      python codalab_service.py test --version ${TRAVIS_BRANCH} --shared-file-system run
    displayName: 'docker build and test'
    env:
      CODALAB_USERNAME: codalab
      CODALAB_PASSWORD: codalab
      CI: true
      TRAVIS_BRANCH: $(Build.SourceBranchName)