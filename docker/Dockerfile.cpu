FROM ubuntu:xenial
MAINTAINER CodaLab Team "codalab.worksheets@gmail.com"

# Common steps below (Should be the same between CPU and GPU docker images
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    git \
    python2.7 \
    python-pip \
    python-dev \
    python-software-properties \
    python-tk \
    software-properties-common \
    build-essential \
    cmake \
    libhdf5-dev \
    swig \
    wget

## Python 3
RUN apt-get install -y \
    python3-pip \
    python3-dev \
    python3-software-properties

## Oracle JDK 8
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
    add-apt-repository -y ppa:webupd8team/java && \
    apt-get update && \
    apt-get install -y oracle-java8-installer && \
    rm -rf /var/cache/oracle-jdk8-installer

ENV JAVA_HOME /usr/lib/jvm/java-8-oracle

ENV SCALA_VERSION 2.12.6
## Scala
RUN wget http://scala-lang.org/files/archive/scala-$SCALA_VERSION.deb &&
    dpkg -i scala-$SCALA_VERSION.deb && \
    echo "deb https://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list && \
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 && \
    apt-get -y update && \
    apt-get -y install sbt && \
    apt-get clean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/* &&

ENV SCALA_HOME /usr/share/java

RUN pip2 install -U pip
RUN pip2 install -U \
      spacy \
      tqdm \
      wheel \
      scikit-learn \
      scikit-image \
      dlib \
      gym[all] \
      nltk \
      numpy \
      scipy \
      matplotlib \
      pandas \
      sympy \
      nose &&

RUN python -m spacy download en

## Set up python3 environment

RUN pip3 install -U pip
RUN pip3 install -U \
      numpy \
      spacy \
      tqdm \
      wheel \
      scikit-learn \
      scikit-image \
      dlib \
      gym[all] \
      nltk \
      scipy \
      matplotlib \
      pandas \
      sympy \
      nose

RUN python3 -m spacy download en


# Common steps are over, below are CPU-specific commands

RUN pip2 install -U \
      tensorflow \
      tensorboard \
      keras

RUN pip2 install -U http://download.pytorch.org/whl/cpu/torch-0.4.1-cp27-cp27mu-linux_x86_64.whl || pip install -U http://download.pytorch.org/whl/cpu/torch-0.4.1-cp27-cp27m-linux_x86_64.whl
RUN pip2 install torchvision


RUN pip3 install -U \
      tensorflow \
      tensorboard \
      keras

RUN pip3 install http://download.pytorch.org/whl/cpu/torch-0.4.1-cp35-cp35m-linux_x86_64.whl
RUN pip3 install torchvision
