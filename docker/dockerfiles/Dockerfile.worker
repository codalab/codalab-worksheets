FROM golang as ecr-login-installation
# Install the Amazon ECR Docker Credential Helper
# Use Docker multi-stage builds to get rid of intermediate layers related to installation

ENV GOPATH /root/go
RUN go get -u github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login
WORKDIR /root/go/src/github.com/awslabs/amazon-ecr-credential-helper
RUN make

FROM python:3.6.10-buster
MAINTAINER CodaLab Worksheets <codalab.worksheets@gmail.com>

ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && \
  apt-get install -y --no-install-recommends software-properties-common && \
  apt-get update && \
  apt-get install -y --no-install-recommends \
    build-essential && \
    rm -rf /var/lib/apt/lists/*;

COPY --from=ecr-login-installation /root/go/src/github.com/awslabs/amazon-ecr-credential-helper/bin/local /usr/local/bin
RUN mkdir $HOME/.docker
RUN echo "{\"credsStore\": \"ecr-login\"}" >> ~/.docker/config.json

WORKDIR /opt
RUN mkdir ${WORKDIR}/codalab

# Install dependencies
COPY requirements.txt requirements.txt
RUN python3.6 -m pip install --user --no-cache-dir --upgrade pip; \
    python3.6 -m pip install --no-cache-dir -r requirements.txt;

# Install code
COPY codalab/lib codalab/lib
COPY codalab/worker codalab/worker
COPY codalab/common.py codalab/common.py
COPY setup.py setup.py

RUN python3 -m pip install --no-cache-dir -e .

# Allow non-root to read everything
RUN chmod -R og=u-w .
