version: '3.5'

x-non-blocking-logging:
  &non-blocking-logging
  driver: json-file
  options:
    mode: non-blocking

x-codalab-env:
  &codalab-env
  - CODALAB_HOME=${CODALAB_HOME}
  - CODALAB_USERNAME=${CODALAB_ROOT_USERNAME}
  - CODALAB_PASSWORD=${CODALAB_ROOT_PASSWORD}

x-codalab-mysql-env:
  &codalab-mysql-env
  - CODALAB_MYSQL_HOST=${CODALAB_MYSQL_HOST}
  - CODALAB_MYSQL_USERNAME=${CODALAB_MYSQL_USERNAME}
  - CODALAB_MYSQL_PASSWORD=${CODALAB_MYSQL_PASSWORD}

services:
  rest-server:
    image: codalab/server:${CODALAB_VERSION}
    command: cl server
    environment:
      *codalab-env
    networks:
      - service
    ports:
      - ${CODALAB_REST_PORT}:2900
    logging:
      *non-blocking-logging

  bundle-manager:
    image: codalab/server:${CODALAB_VERSION}
    command: cl bundle-manager
    environment:
      *codalab-env
    depends_on:
      - rest-server
    networks:
      - service
    logging:
      *non-blocking-logging

  frontend:
    image: codalab/frontend:${CODALAB_VERSION}
    command: serve -s build -l 2700
    depends_on:
      - rest-server
    networks:
      - service
    logging:
      *non-blocking-logging

  nginx:
    image: nginx:1.12.0
    command: /opt/wait-for-it.sh rest-server:2900 -- nginx
    ports:
      - ${CODALAB_HTTP_PORT}:80
    volumes:
      - ./files/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./files/wait-for-it.sh:/opt/wait-for-it.sh
    depends_on:
      - frontend
    networks:
      - service
    logging:
      *non-blocking-logging

  worker:
    image: codalab/worker:${CODALAB_VERSION}
    environment:
      *codalab-env
    depends_on:
      - bundle-manager
    networks:
      - service
      - worker
    logging:
      *non-blocking-logging

  monitor:
    image: codalab/server:${CODALAB_VERSION}
    command: python ./monitor.py --log-path monitor.out/monitor.log --backup-path monitor.out
    environment:
      *codalab-env
    depends_on:
      - rest-server
    networks:
      - service
    logging:
      *non-blocking-logging
    volumes:
      - /var/lib/docker:/var/lib/docker
      - ${CODALAB_MONITOR_DIR}:/opt/codalab-worksheets/monitor.out

networks:
  worker:
    name: ${CODALAB_WORKER_NETWORK_NAME}
    internal: True
  service:
